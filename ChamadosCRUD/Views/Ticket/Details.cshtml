@model ChamadosCRUD.Models.Ticket
@{
    ViewData["Title"] = "Detalhes do Chamado";
}
<form asp-controller="Ticket" asp-action="Create" method="post">
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="row">
        <div class="col">
            <div class="mb-3">
                <label asp-for="Title" class="form-label"></label>
                <input asp-for="Title" class="form-control" disabled>
            </div>
            <div class="mb-3">
                <label asp-for="RequesterPhone" class="form-label"></label>
                <input asp-for="RequesterPhone" class="form-control" disabled>
            </div>
        </div>
        <div class="col">
            <div class="mb-3">
                <label asp-for="RequesterName" class="form-label"></label>
                <input asp-for="RequesterName" class="form-control" disabled>
            </div>
            <div class="mb-3">
                <label asp-for="RequesterEmail" class="form-label"></label>
                <input asp-for="RequesterEmail" class="form-control" disabled>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <div class="mb-3">
                <label asp-for="LocationId" class="form-label"></label>
                <input asp-for="Location.Name" class="form-control" disabled>
            </div>
        </div>
        <div class="col">
            <div class="mb-3">
                <label asp-for="Location.CEP" class="form-label"></label>
                <input asp-for="Location.CEP" class="form-control" disabled>
            </div>
        </div>
        
        
    </div>
    <div class="row">
        <div class="col">
            <div class="mb-3">
                <label asp-for="Location.Bairro" class="form-label"></label>
                <input asp-for="Location.Bairro" class="form-control" disabled>
            </div>
        </div>
        <div class="col">
            <div class="mb-3">
                <label asp-for="Location.Rua" class="form-label"></label>
                <input asp-for="Location.Rua" class="form-control" disabled>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <div class="mb-3">
                <label asp-for="AssignedTo" class="form-label">Atribuído para</label>
                @if(Model.AssignedToId != null)
                {
                    <input asp-for="AssignedTo.Name" class="form-control" disabled>
                }
                else
                {
                    <input asp-for="AssignedTo" value="Não atribuído" class="form-control" disabled>
                }
                
            </div>
        </div>
        <div class="col">
            <div class="mb-3">
                <label asp-for="Status" class="form-label"></label>
                <input asp-for="Status.Name" class="form-control" disabled>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <div class="mb-3">

                <label asp-for="Description" class="form-label"></label>
                <textarea asp-for="Description" class="form-control" rows="10"></textarea>

                @*@Html.DisplayFor(Model => Model.Description)*@
            </div>
        </div>
    </div>

</form>

@section Scripts{
    <!--Dependencias summernote editor de texto-->
    <!--https://summernote.org/getting-started/#include-jscss-->
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>

    <!-- include summernote css/js -->
    <link href="https://cdn.jsdelivr.net/npm/summernote@0.9.0/dist/summernote.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/summernote@0.9.0/dist/summernote.min.js" defer></script>@* Defer informa ao navegador para processar este recurso js apenas quando o html estiver pronto*@

    <!--Dependencias summernote editor de texto-->
    <script>
        $(document).ready(function(){


            var htmlEncoded = '@Html.DisplayFor(Model => Model.Description)';

            var parser = new DOMParser();

            var htmlDecoded = parser.parseFromString(htmlEncoded, "text/html").body.textContent;

            $('#Description').summernote({
              tabsize: 2,
              height: 520,
              toolbar: []//removendo toolbar
            });

            //solucao: https://stackoverflow.com/questions/52517179/how-to-render-html-in-summernote

            $('Description').summernote('code', htmlDecoded);
            $('#Description').summernote('disable');
            
            

        });
    </script>
}